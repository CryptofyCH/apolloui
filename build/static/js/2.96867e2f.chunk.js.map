{"version":3,"sources":["views/Widgets/DashboardWidget.js","views/Pools/PoolsTable/index.js","views/Pools/PoolsTable/PoolsTable.js","views/Dashboard/Dashboard.js","views/Dashboard/index.js"],"names":["DashboardWidget","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateDimensions","widgets","ReactDOM","findDOMNode","assertThisInitialized","getElementsByClassName","smallWidth","offsetWidth","widgetClasses","state","setState","window","addEventListener","removeEventListener","node_modules_react_default","a","createElement","reactstrap_es","className","bgColor","icon","value","title","color","progressColor","progressValue","secondaryTitle","secondaryValue","Component","PoolsTable","_this$props","pools","utility","data","_","sortBy","react","_ref","i18n","responsive","id","map","pool","index","key","url","priority","stratumActive","status","displayHashrate","lastShareTime","moment","to","accepted","rejected","discarded","getworks","user","Dashboard","minerCheck","minerError","mcuError","mcu","miner","settings","minerTotalShares","stats","summary","hardwareErrors","minerpercentageRejected","Math","round","minerpercentageError","errorsColor","minerUptime","subtract","elapsed","mainPool","find","lastShare","lastShareColor","timestamp","format","diffLastShare","online","Loading","show","bg","centerTitle","subtitle","error","centerSubtitle","showBtn","showProgress","ref","xs","md","xl","Widgets_DashboardWidget","mHSAv","minerTemperature","tempColor","Number","temperature","toFixed","Pools_PoolsTable","workUtility","minerModeIcon","minerMode","voltage","frequency","minerFanSpeed","btnTo","btnText","connect","loadingMcu","mcuStats","loading","loadingMiner","minerStats","loadingOnline","minerOnline"],"mappings":"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","file":"static/js/2.96867e2f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Card,\n  CardBody,\n  Progress\n} from 'reactstrap';\n\nclass DashboardWidget extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      widgetClasses: 'd-inline-block text-muted text-truncate'\n    }\n\n  }\n\n  updateDimensions = () => { \n    const widgets = ReactDOM.findDOMNode(this).getElementsByClassName('widget');\n    const smallWidth = (widgets[0] && widgets[0].offsetWidth && widgets[0].offsetWidth <= 280) || false;\n    let widgetClasses = this.state.widgetClasses;\n\n    if (smallWidth) widgetClasses += ' small-width'\n    else widgetClasses = 'd-inline-block text-muted text-truncate';\n\n    this.setState({ widgetClasses: widgetClasses });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <Card className={this.props.bgColor}>\n        <CardBody className=\"widget\">\n          <div className=\"h1 text-muted float-right\"><i className={this.props.icon + ' text-gray'}></i></div>\n          <div className=\"h4 m-0\">{this.props.value}</div>\n          <div>{this.props.title}</div>\n          <Progress className=\"progress-xs my-3\" color={this.props.progressColor} value={this.props.progressValue} />\n          <small className={this.state.widgetClasses}>{this.props.secondaryTitle}: <b>{this.props.secondaryValue}</b></small>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default DashboardWidget;\n","import PoolsTable from './PoolsTable'\n\nexport default PoolsTable","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport {\n  Table,\n  Button,\n  Badge\n} from 'reactstrap';\n\nimport { displayHashrate } from '../../Filters';\nimport moment from 'moment';\n\nimport { Trans } from '@lingui/macro';\nimport { I18n } from \"@lingui/react\"\n\nclass PoolsTable extends Component {\n\n  render() {\n    const { pools, utility } = this.props;\n\n    pools.data = _.sortBy(pools.data, 'priority');\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Table responsive className=\"table-outline d-none d-sm-table\">\n            <thead className=\"bg-light\">\n              <tr>\n                <th><Trans>Url</Trans></th>\n                <th><Trans>Type</Trans></th>\n                <th><Trans>Active</Trans></th>\n                <th><Trans>Status</Trans></th>\n                <th><Trans>Hashrate</Trans></th>\n                <th>Last share</th>\n                <th>Acc</th>\n                <th>Rej</th>\n                <th>Dis</th>\n                <th>Get</th>\n                <th><Trans>Username</Trans></th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              { pools.data.map(function(pool, index){\n                return <tr key={index}>\n                    <td>\n                      <div className=\"font-weight-bold text-muted\">{ pool.url }</div>\n                    </td>\n                    <td className=\"\">\n                      <h5 className=\"mb-0\"><Badge color={ !pool.priority ? 'primary' : 'light' }>{ !pool.priority ? 'Main' : 'Failover' }</Badge></h5>\n                    </td>\n                    <td className=\"\">\n                      <h5 className=\"mb-0\"><Badge color={ pool.stratumActive ? 'success' : 'light' }>{ pool.stratumActive ? 'Active' : 'Inactive' }</Badge></h5>\n                    </td>\n                    <td>\n                      <h5 className=\"mb-0\"><Badge color={ pool.status === 'Alive' ? 'success' : 'danger' }>{ pool.status }</Badge></h5>\n                    </td>\n                    <td className=\"text-center\">\n                    { (pool.stratumActive) ? \n                      <h6 className=\"mb-0 font-weight-bold\">\n                        <i className=\"fa fa-fire text-secondary\"></i> { displayHashrate(utility * 71582788, 'h') }\n                      </h6>\n                      :\n                      <span>Not active</span>\n                    }\n                    </td>\n                    <td>\n                      { pool.lastShareTime ? moment().to(moment(pool.lastShareTime, 'X')) : 'Never' }\n                    </td>\n                    <td>\n                      { pool.accepted }\n                    </td>\n                    <td>\n                      { pool.rejected }\n                    </td>\n                    <td>\n                      { pool.discarded }\n                    </td>\n                    <td>\n                      { pool.getworks }\n                    </td>\n                    <td>{ pool.user }</td>\n                  </tr>\n              })}\n            </tbody>\n          </Table>\n        )}\n      </I18n>\n    );\n  }\n}\n\nexport default PoolsTable;\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Card,\n  CardBody,\n  Col,\n  Row\n} from 'reactstrap';\n\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { LoadingErrorBox } from '../Loading';\nimport DashboardWidget from '../Widgets/DashboardWidget';\nimport { displayHashrate, minerModeIcon, tempColor } from '../Filters';\nimport PoolsTable from '../Pools/PoolsTable';\n\nimport { Trans } from '@lingui/macro';\n\nclass Dashboard extends Component {\n\n  render() {\n    const { minerCheck, minerError, mcuError, mcu, miner, settings } = this.props;\n\n    // Miner shares\n    const minerTotalShares = (miner.stats.summary.data.hardwareErrors + miner.stats.summary.data.accepted + miner.stats.summary.data.rejected);\n    const minerpercentageRejected = Math.round(miner.stats.summary.data.rejected * 100 / minerTotalShares * 100) / 100\n    const minerpercentageError = Math.round(miner.stats.summary.data.hardwareErrors * 100 / minerTotalShares * 100) / 100\n    let errorsColor = 'success';\n    if (minerpercentageError >= 10 && minerpercentageError <= 20) errorsColor = 'warning';\n    else if (minerpercentageError > 20) errorsColor = 'danger';\n\n    // Miner uptime\n    const minerUptime = moment().to(moment().subtract(miner.stats.summary.data.elapsed, 'seconds'), true);\n\n    // Active pool\n    const mainPool = _.find(miner.stats.pools.data, { stratumActive: true });\n\n    // Last share\n    let lastShare = 'Not available',\n        lastShareTime = 0,\n        lastShareColor = 'success';\n    const timestamp = moment().format('X');\n    if (mainPool && mainPool.lastShareTime) {\n      lastShare = moment().to(moment(mainPool.lastShareTime, 'X'));\n      lastShareTime = mainPool.lastShareTime;\n    }\n    const diffLastShare = timestamp - lastShareTime;\n    if (diffLastShare >= 300 && diffLastShare <= 600) lastShareColor = 'warning';\n    else if (diffLastShare > 600) lastShareColor = 'danger'\n\n    if (!minerCheck.online.status) {\n      return (\n        <LoadingErrorBox \n          show={ true }\n          bg=\"bg-0\"\n          title=\"Miner is offline\"\n          centerTitle={ true }\n          subtitle=\"Try to start it\"\n          error={ false }\n          centerSubtitle={ true }\n          icon=\"fa-toggle-off animated bounce\"\n          showBtn={ true }\n          btnTo=\"/miner/start\"\n          btnText=\"Start\"\n        />\n      )\n    }\n\n    if (minerError) {\n      return (\n        <LoadingErrorBox \n          show={true}\n          bg=\"bg-0\"\n          title=\"It seems there is a problem to communicate with the miner, check error message.\"\n          centerTitle={true}\n          subtitle=\"Wait at least 1 minute, if problem persists, try to restart the miner, check the settings or try to reboot the system.\"\n          error={ minerError }\n          centerSubtitle={true}\n          icon=\"fa-exclamation-circle animated bounce\"\n          showBtn={false}\n          showProgress={ false }\n        />\n      )\n    }\n\n    return (\n      <div ref=\"main\">\n        { (mcuError) ?\n            <Alert color=\"warning\">There is a problem fetching system stats (<b>{ mcuError }</b>)</Alert>\n          : null \n        }\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-dark\" \n                icon=\"fa fa-fire\" \n                value={ displayHashrate(miner.stats.summary.data.mHSAv, 'mh') }\n                title=\"Current hashrate\"\n                progressColor=\"primary\"\n                progressValue=\"100\"\n                secondaryTitle=\"Pool\"\n                secondaryValue={(mainPool && mainPool.url) ? mainPool.url : 'Nothing active'}\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-info\" \n                icon=\"fa fa-thermometer-half\" \n                value={ (mcu.stats.minerTemperature || 0) + '°C' }\n                title=\"Miner temperature\"\n                progressColor={ tempColor(mcu.stats.minerTemperature) }\n                progressValue={ mcu.stats.minerTemperature || 0 }\n                secondaryTitle=\"MCU temperature\"\n                secondaryValue={ (Number(mcu.stats.temperature) / 1000).toFixed(2) + '°C' }\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-gray-300\" \n                icon=\"fa fa-exclamation-triangle\" \n                value={ minerpercentageError + '%' }\n                title=\"Hardware errors\"\n                progressColor={ errorsColor }\n                progressValue={ 100 - minerpercentageError }\n                secondaryTitle=\"Rejected\"\n                secondaryValue={ minerpercentageRejected + '%' }\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-gray-200\" \n                icon=\"fa fa-clock\" \n                value={ minerUptime }\n                title=\"Miner uptime\"\n                progressColor={ lastShareColor }\n                progressValue={ 100 }\n                secondaryTitle=\"Last share\"\n                secondaryValue={ lastShare }\n              ></DashboardWidget>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ miner.stats.summary.data.accepted }</div>\n                  <div><Trans>Accepted</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ miner.stats.summary.data.rejected }</div>\n                  <div><Trans>Rejected</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ miner.stats.summary.data.discarded }</div>\n                  <div><Trans>Discarded</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ miner.stats.summary.data.hardwareErrors }</div>\n                  <div><Trans>HW Errors</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <h4><Trans>Pools</Trans></h4>\n              <div>\n                <PoolsTable pools={ miner.stats.pools } utility={ miner.stats.summary.data.workUtility }></PoolsTable>\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <div>\n          <h4><Trans>Settings</Trans></h4>        \n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className={ minerModeIcon(settings.minerMode) + ' fa text-gray'}></i></div>\n                  <div className=\"h4 m-0\">{ settings.minerMode || 'Not set' }</div>\n                  <div><Trans>Miner mode</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-bolt text-gray\"></i></div>\n                  <div className=\"h4 m-0\">\n                    { (settings.minerMode === 'custom') ?\n                      <span>{settings.voltage || 0 }<small className=\"textmuted\">V</small></span>\n                      : <span>Auto</span>\n                    }\n                  </div>\n                  <div><Trans>Miner voltage</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-broadcast-tower text-gray\"></i></div>\n                  <div className=\"h4 m-0\">\n                    { (settings.minerMode === 'custom') ?\n                      <span>{settings.frequency || 0 }<small className=\"textmuted\">MHz</small></span>\n                      : <span>Auto</span>\n                    }\n                  </div>\n                  <div><Trans>Miner frequency</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-wind text-gray\"></i></div>\n                  <div className=\"h4 m-0\">{ mcu.stats.minerFanSpeed }<small className=\"textmuted\">Rpm</small></div>\n                  <div><Trans>Fan speed</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loadingMcu: state.mcuStats.loading,\n    mcu: state.mcuStats.data,\n    mcuError: state.mcuStats.error,\n    loadingMiner: state.minerStats.loading,\n    miner: state.minerStats.data,\n    minerError: state.minerStats.error,\n    loadingOnline: state.minerOnline.loading,\n    minerCheck: state.minerOnline.data,\n    settings: state.settings\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","import Dashboard from './Dashboard'\n\nexport default Dashboard"],"sourceRoot":""}