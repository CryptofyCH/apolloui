{"version":3,"sources":["views/Settings/SettingsMiner/SettingsMiner.js","views/Settings/SettingsWifi/SettingsWifi.js","views/Settings/SettingsGeneral/SettingsGeneral.js","views/Settings/Settings.js","views/Settings/index.js"],"names":["SettingsMiner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","voltages","-10","0","node_modules_react_default","a","createElement","26","37","50","100","style","color","label","marks","slider","onSelect","bind","assertThisInitialized","autoFanSwitchChange","mode","onChange","name","value","_this$props","fan","_this2","_this$props2","minerMode","voltage","frequency","react","_ref","i18n","className","reactstrap_es","lg","id","form","md","react_es","variant","checked","size","disabled","components","href","rc_slider_es","min","max","step","val","Component","SettingsWifi","SettingsGeneral","state","password","repeatPassword","passwordError","repeatPasswordError","handlePasswordChange","evt","setState","defineProperty","target","_this$state","changePassword","leftSidebarVisibility","leftSidebarExtended","rightSidebarVisibility","temperatureUnit","_this$state2","for","type","bsSize","placeholder","onClick","xl","flush","dataOn","dataOff","connect","dispatch","changePasswordAction","restartFields","Settings","settings","handleSave","objectSpread","save","_this$state$settings","oldSettings","changed","isEqual","restartNeeded","pick","Settings_SettingsMiner_SettingsMiner","assign","Settings_SettingsWifi_SettingsWifi","Settings_SettingsGeneral_SettingsGeneral","saveSettings"],"mappings":"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","file":"static/js/3.6471ad13.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AppSwitch } from '@coreui/react';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  CardSubtitle,\n  Col,\n  Row,\n  Form,\n} from 'reactstrap';\n\nimport 'rc-slider/assets/index.css';\nimport Slider from 'rc-slider';\n\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nclass SettingsMiner extends Component {\n  constructor(props) {\n    super(props);\n    this.voltages = {\n      '-10': '-10°C',\n      0: <strong>0°C</strong>,\n      26: '26°C',\n      37: '37°C',\n      50: '50°C',\n      100: {\n        style: {\n          color: 'red',\n        },\n        label: <strong>100°C</strong>,\n      },\n    };\n\n    this.marks = {\n      0: '0',\n      50: '50',\n      100: '100',\n    };\n\n    this.slider = {\n\n    };\n\n    this.onSelect = this.onSelect.bind(this);\n    this.autoFanSwitchChange = this.autoFanSwitchChange.bind(this);\n  }\n\n  onSelect(mode) {\n    const {\n      onChange,\n    } = this.props;\n    onChange({ name: 'minerMode', value: mode });\n  }\n\n  autoFanSwitchChange() {\n    const {\n      fan,\n      onChange,\n    } = this.props;\n    onChange({ name: 'fan', value: fan === -1 ? 0 : -1 });\n  }\n\n  render() {\n    const {\n      minerMode,\n      voltage,\n      fan,\n      frequency,\n      onChange,\n    } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div className=\"animated fadeIn\">\n            <Row>\n              { /* Miner */ }\n              <Col lg=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle><Trans>Miner</Trans></CardTitle>\n                    <CardSubtitle className=\"text-muted\"><Trans>Manage miner specific configurations</Trans></CardSubtitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Form>\n                      <Row form>\n                        <Col md={4}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"primary\"\n                                checked={minerMode === 'eco'}\n                                size=\"\"\n                                onChange={() => this.onSelect('eco')}\n                                disabled={minerMode === 'eco'}\n                              />\n                              <h4>\n                                <i className=\"fa fa-leaf mr-2 initialism text-secondary\" />\n                                <Trans>ECO mode</Trans>\n                              </h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                <Trans>\nIn ECO mode your miner will consume less power (about\n                                  {' '}\n                                  <b>1.0W/MHs</b>\n) but its hashrate will be slower. This mode is recommende if you want have less noise and less possible to overheat your miner.\n                                </Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                        <Col md={4}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={minerMode === 'turbo'}\n                                size=\"\"\n                                onChange={() => this.onSelect('turbo')}\n                                disabled={minerMode === 'turbo'}\n                              />\n                              <h4>\n                                <i className=\"fa fa-rocket mr-2 initialism text-secondary\" />\n                                <Trans>TURBO mode</Trans>\n                              </h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                <Trans>\nIn Turbo mode your miner will consume more power (about\n                                  {' '}\n                                  <b>1.4W/MHs</b>\n) and so its hashrate will be faster. This mode is good to gain the maximum profit but you need to take care of possible overheat.\n                                </Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                        <Col md={4}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"warning\"\n                                checked={minerMode === 'custom'}\n                                size=\"\"\n                                onChange={() => this.onSelect('custom')}\n                                disabled={minerMode === 'custom'}\n                              />\n                              <h4>\n                                <i className=\"fa fa-diagnoses mr-2 initialism text-secondary\" />\n                                <Trans>Custom mode</Trans>\n                              </h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                <Trans>In custom mode you can control frequency and voltage of your miner for your specific needs. This mode is for expert users and is not recommended if you don't know what you are doing. You could harm your miner.</Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n\n            {\n              minerMode === 'custom'\n              && (\n              <Row>\n                <Col lg=\"12\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle><Trans>Custom mode</Trans></CardTitle>\n                      <CardSubtitle className=\"text-muted\"><Trans>Personalise your miner configurations</Trans></CardSubtitle>\n                    </CardHeader>\n                    <CardBody>\n                      <Form>\n                        <Row form>\n                          <Col md={4}>\n                            <div>\n                              <div className=\"clearfix\">\n                                <h4><Trans>Voltage</Trans></h4>\n                              </div>\n                              <div>\n                                <p className=\"text-muted \">\n                                  <Trans>\nYou can set your miner custom voltage or\n                                    {' '}\n                                    <a href=\"\">reset</a>\n                                    {' '}\nto default value.\n                                  </Trans>\n                                </p>\n                                <Card className=\"border-0\">\n                                  <CardBody>\n                                    <Slider\n                                      min={0}\n                                      max={100}\n                                      step={10}\n                                      marks={this.marks}\n                                      value={voltage}\n                                      onChange={val => onChange({ value: val, name: 'voltage' })}\n                                    />\n                                  </CardBody>\n                                </Card>\n                              </div>\n                            </div>\n                          </Col>\n                          <Col md={4}>\n                            <div>\n                              <div className=\"clearfix\">\n                                <h4><Trans>Frequency</Trans></h4>\n                              </div>\n                              <div>\n                                <p className=\"text-muted \">\n                                  <Trans>\nYou can set your miner custom frequency or\n                                    {' '}\n                                    <a href=\"\">reset</a>\n                                    {' '}\nto default value.\n                                  </Trans>\n                                </p>\n                                <Card className=\"border-0\">\n                                  <CardBody>\n                                    <Slider\n                                      min={0}\n                                      max={100}\n                                      step={10}\n                                      marks={this.marks}\n                                      value={frequency}\n                                      onChange={val => onChange({ value: val, name: 'frequency' })}\n                                    />\n                                  </CardBody>\n                                </Card>\n                              </div>\n                            </div>\n                          </Col>\n                          <Col md={4}>\n                            <div>\n                              <div className=\"clearfix\">\n                                <AppSwitch\n                                  className=\"float-left mr-2\"\n                                  variant=\"pill\"\n                                  label\n                                  color=\"success\"\n                                  checked={fan === -1}\n                                  onChange={this.autoFanSwitchChange}\n                                />\n                                <h4><Trans>Auto adjust fan</Trans></h4>\n                              </div>\n                              <div>\n                                <p className=\"text-muted \">\n                                  <Trans>Keep fan speed at auto mode or turn of it to manually set the fan speed.</Trans>\n                                </p>\n                                <Card className=\"border-0\">\n                                  <CardBody>\n                                    <Slider\n                                      min={0}\n                                      max={100}\n                                      step={10}\n                                      marks={this.marks}\n                                      disabled={fan === -1}\n                                      value={fan !== -1 ? fan : 0}\n                                      onChange={val => onChange({ value: val, name: 'fan' })}\n                                    />\n                                  </CardBody>\n                                </Card>\n                              </div>\n                            </div>\n                          </Col>\n                        </Row>\n                      </Form>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n              )\n            }\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n\nexport default SettingsMiner;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  CardSubtitle,\n  Col,\n  Row,\n  Form\n} from 'reactstrap';\n\nimport { Trans } from '@lingui/macro';\nimport { I18n } from \"@lingui/react\"\n\nclass SettingsWifi extends Component {\n\n  render() {\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div className=\"animated fadeIn\">\n            <Row>\n              <Col lg=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle><Trans>Wifi</Trans></CardTitle>\n                    <CardSubtitle className=\"text-muted\"><Trans>Connect your system controller to a Wifi instead using ethernet</Trans></CardSubtitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Form>\n                      <Row form>\n                        <Col md={4}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <h4><Button className=\"float-left mr-2 text-uppercase\" color={'primary'} size=\"sm\"><Trans>Scan</Trans></Button><Trans>Look for Wifi</Trans></h4>\n                            </div>\n                            <div className=\"mt-1\">\n                              <p className=\"text-muted \">\n                                <Trans>Clicking the button your system will scan for available wifi networks. Be aware that connecting to a Wifi network you will need to connect to the new Wifi IP address you have to find in your LAN.</Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                        <Col md={8}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <h4><i className=\"fa fa-wifi mr-2 initialism text-secondary\"></i><Trans>Wifi networks</Trans></h4>\n                            </div>\n                            <div className=\"\">\n                              <p className=\"text-muted \">\n                                <Trans>There are no wifi networks available yet. Please click the scan button to look at them.</Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n\nexport default SettingsWifi;\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { AppSwitch } from '@coreui/react';\nimport {\n  Button,\n  CardDeck,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  CardSubtitle,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\n\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nimport { changePassword as changePasswordAction } from '../../../actions/auth';\n\nclass SettingsGeneral extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: '',\n      repeatPassword: '',\n      passwordError: '',\n      repeatPasswordError: '',\n    };\n\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  handlePasswordChange() {\n    const {\n      password,\n      repeatPassword,\n    } = this.state;\n\n    const {\n      changePassword,\n    } = this.props;\n\n    if (!password) {\n      this.setState({\n        passwordError: 'Password is required.',\n      });\n      return;\n    }\n\n    if (password !== repeatPassword) {\n      this.setState({\n        passwordError: 'Passwords do not match.',\n        repeatPasswordError: 'Passwords do not match.',\n      });\n      return;\n    }\n\n    changePassword(password);\n  }\n\n  render() {\n    const {\n      leftSidebarVisibility,\n      leftSidebarExtended,\n      rightSidebarVisibility,\n      temperatureUnit,\n      onChange,\n    } = this.props;\n\n    const {\n      password,\n      repeatPassword,\n      passwordError,\n      repeatPasswordError,\n    } = this.state;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div className=\"animated fadeIn\">\n            <CardDeck>\n              { /* Lockscreen */ }\n              <Card>\n                <CardHeader>\n                  <CardTitle><Trans>Change lockscreen password</Trans></CardTitle>\n                  <CardSubtitle className=\"text-muted\"><Trans>Change the password to access the dashboard</Trans></CardSubtitle>\n                </CardHeader>\n                <CardBody>\n                  <p className=\"help-block form-text text-muted\">\n                    <Trans>Changing the password will lock the dashboard. You will need to use the new password to unlock it.</Trans>\n                  </p>\n                  <Form>\n                    <Row form>\n                      <Col md={6}>\n                        <FormGroup>\n                          <Label for=\"password\"><Trans>Password</Trans></Label>\n                          <Input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            bsSize=\"lg\"\n                            value={password}\n                            onChange={this.onChange}\n                          />\n                          <span className=\"text-danger\">\n                            {passwordError}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                      <Col md={6}>\n                        <FormGroup>\n                          <Label for=\"repeatPassword\"><Trans>Repeat password</Trans></Label>\n                          <Input\n                            type=\"password\"\n                            name=\"repeatPassword\"\n                            id=\"repeatPassword\"\n                            placeholder=\"\"\n                            bsSize=\"lg\"\n                            value={repeatPassword}\n                            onChange={this.onChange}\n                          />\n                          <span className=\"text-danger\">\n                            {repeatPasswordError}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                      <Col md={12}>\n                        <Button className=\"mr-2 text-uppercase\" color=\"primary\" size=\"sm\" onClick={this.handlePasswordChange}><Trans>Change</Trans></Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n\n              { /* Layout */ }\n              <Card>\n                <CardHeader>\n                  <CardTitle><Trans>Layout options</Trans></CardTitle>\n                  <CardSubtitle className=\"text-muted\"><Trans>Manage dashboard specific configurations</Trans></CardSubtitle>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col lg={12} xl={6}>\n                        <ListGroup flush>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={leftSidebarVisibility}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'leftSidebarVisibility', value: !leftSidebarVisibility })}\n                              />\n                              <div><Trans>Left Sidebar visibility</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Set left sidebar default visibility</Trans></div>\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={leftSidebarExtended}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'leftSidebarExtended', value: !leftSidebarExtended })}\n                              />\n                              <div><Trans>Extended sidebar</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Keep left sidebar extended or only icons</Trans></div>\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                dataOn=\"°C\"\n                                dataOff=\"°F\"\n                                label\n                                color=\"success\"\n                                checked={temperatureUnit === 'c'}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'temperatureUnit', value: temperatureUnit === 'f' ? 'c' : 'f' })}\n                              />\n                              <div><Trans>Temperature unit</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Set it to Celsius or Fahrenheit</Trans></div>\n                          </ListGroupItem>\n                        </ListGroup>\n                      </Col>\n                      <Col lg={12} xl={6}>\n                        <ListGroup flush>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={rightSidebarVisibility}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'rightSidebarVisibility', value: !rightSidebarVisibility })}\n                              />\n                              <div><Trans>Right sidebar visibility</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Set right sidebar default visibility</Trans></div>\n                          </ListGroupItem>\n                        </ListGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n\n              { /* Backup/Reset */ }\n              <Card>\n                <CardHeader>\n                  <CardTitle><Trans>Backup &amp; Reset</Trans></CardTitle>\n                  <CardSubtitle className=\"text-muted\"><Trans>Use this tools to backup, restore and reset configurations</Trans></CardSubtitle>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row form>\n                      <Col md={12}>\n                        <ListGroup flush>\n                          <ListGroupItem>\n                            <div className=\"\">\n                              <Button className=\"mr-2 text-uppercase\" color=\"primary\" size=\"sm\"><Trans>Backup</Trans></Button>\n                              <div className=\"mt-1 small text-muted\"><Trans>Create a backup file of dashboard, miner and pools configurations</Trans></div>\n                            </div>\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            <div className=\"\">\n                              <Button className=\"mr-2 text-uppercase\" color=\"primary\" size=\"sm\"><Trans>Restore</Trans></Button>\n                              <div className=\"mt-1 small text-muted\"><Trans>Restore all configurations from a backup file</Trans></div>\n                            </div>\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            <div className=\"\">\n                              <Button className=\"mr-2 text-uppercase\" color=\"danger\" size=\"sm\"><Trans>Reset</Trans></Button>\n                              <div className=\"mt-1 small text-muted\"><Trans>Reset all configurations to factory default</Trans></div>\n                            </div>\n                          </ListGroupItem>\n                        </ListGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </CardDeck>\n\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  changePassword: (password) => {\n    dispatch(changePasswordAction({ password }));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(SettingsGeneral);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Col,\n  Row,\n} from 'reactstrap';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\n\nimport { Trans } from '@lingui/macro';\n\nimport SettingsMiner from './SettingsMiner/SettingsMiner';\nimport SettingsWifi from './SettingsWifi/SettingsWifi';\nimport SettingsGeneral from './SettingsGeneral/SettingsGeneral';\nimport { saveSettings } from '../../actions/settings';\n\nconst restartFields = [\n  'minerMode',\n  'voltage',\n  'frequency',\n  'fan',\n];\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      settings,\n    } = this.props;\n\n    this.state = {\n      settings,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  onChange({ name, value }) {\n    this.setState(state => ({\n      settings: {\n        ...state.settings,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleSave() {\n    const { save } = this.props;\n    const { settings } = this.state;\n\n    save(settings);\n  }\n\n  render() {\n    const {\n      settings: {\n        minerMode,\n        voltage,\n        frequency,\n        fan,\n        leftSidebarVisibility,\n        leftSidebarExtended,\n        rightSidebarVisibility,\n        temperatureUnit,\n      },\n      settings,\n    } = this.state;\n\n    const { oldSettings } = this.props;\n\n    const changed = !isEqual(settings, oldSettings);\n    const restartNeeded = !isEqual(pick(settings, restartFields), pick(oldSettings, restartFields));\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col lg=\"12\">\n            <Card>\n              <CardHeader className=\"bg-dark\">\n                { !restartNeeded && (\n                  <Button\n                    size=\"sm\"\n                    className=\"btn-success text-uppercase mr-2\"\n                    disabled={!changed}\n                    onClick={this.handleSave}\n                  >\n                    <Trans>Save</Trans>\n                  </Button>\n                )}\n                { restartNeeded && (\n                  <Button\n                    size=\"sm\"\n                    className=\"btn-warning text-uppercase\"\n                    onClick={this.handleSave}\n                  >\n                    <Trans>Save &amp; Restart</Trans>\n                  </Button>\n                )}\n                { restartNeeded && <span className=\"ml-2\"><Trans>You need to restart your miner to apply changes.</Trans></span> }\n              </CardHeader>\n            </Card>\n          </Col>\n        </Row>\n\n        { /* Miner conf */ }\n        <SettingsMiner\n          {...{\n            minerMode, voltage, frequency, fan,\n          }}\n          onChange={this.onChange}\n        />\n\n        { /* Wifi */ }\n\n        <SettingsWifi />\n\n        { /* General options */ }\n        <SettingsGeneral\n          {...{\n            leftSidebarVisibility, leftSidebarExtended, rightSidebarVisibility, temperatureUnit,\n          }}\n          onChange={this.onChange}\n        />\n\n        <p />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  oldSettings: state.settings,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  save: (settings) => {\n    dispatch(saveSettings(settings));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import Settings from './Settings'\n\nexport default Settings"],"sourceRoot":""}