{"version":3,"sources":["views/Widgets/DashboardWidget.js","views/Dashboard/Dashboard.js","views/Dashboard/index.js"],"names":["DashboardWidget","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateDimensions","widgets","ReactDOM","findDOMNode","assertThisInitialized","getElementsByClassName","smallWidth","offsetWidth","widgetClasses","state","setState","window","addEventListener","removeEventListener","node_modules_react_default","a","createElement","reactstrap_es","className","bgColor","icon","value","title","color","progressColor","progressValue","secondaryTitle","secondaryValue","Component","Dashboard","fetchMcu","fetchMiner","_this$props","mcu","loadingMcu","loadingMiner","miner","settings","minerTotalShares","stats","summary","data","hardwareErrors","accepted","rejected","minerpercentageRejected","minerpercentageError","errorsColor","minerUptime","moment","to","subtract","elapsed","mainPool","_","find","pools","stratumActive","lastShare","lastShareTime","lastShareColor","timestamp","format","diffLastShare","ref","xs","md","xl","Widgets_DashboardWidget","DisplayHashrate","mHSAv","url","temperature","toFixed","minerMode","react","id","voltage","frequency","fan","responsive","connect","mcuStats","loading","minerStats","dispatch"],"mappings":"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","file":"static/js/2.a65631d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Card,\n  CardBody,\n  Progress\n} from 'reactstrap';\n\nclass DashboardWidget extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      widgetClasses: 'd-inline-block text-muted text-truncate'\n    }\n\n  }\n\n  updateDimensions = () => { \n    const widgets = ReactDOM.findDOMNode(this).getElementsByClassName('widget');\n    const smallWidth = (widgets[0] && widgets[0].offsetWidth && widgets[0].offsetWidth <= 280) || false;\n    let widgetClasses = this.state.widgetClasses;\n\n    if (smallWidth) widgetClasses += ' small-width'\n    else widgetClasses = 'd-inline-block text-muted text-truncate';\n\n    this.setState({ widgetClasses: widgetClasses });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <Card className={this.props.bgColor}>\n        <CardBody className=\"widget\">\n          <div className=\"h1 text-muted float-right\"><i className={this.props.icon + ' text-gray'}></i></div>\n          <div className=\"h4 m-0\">{this.props.value}</div>\n          <div>{this.props.title}</div>\n          <Progress className=\"progress-xs my-3\" color={this.props.progressColor} value={this.props.progressValue} />\n          <small className={this.state.widgetClasses}>{this.props.secondaryTitle}: <b>{this.props.secondaryValue}</b></small>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default DashboardWidget;\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Row,\n  Table,\n} from 'reactstrap';\n\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport DashboardWidget from '../Widgets/DashboardWidget';\nimport DisplayHashrate from '../Filters/DisplayHashrate';\n\nimport { Trans } from '@lingui/macro';\n\nimport { fetchMcu } from '../../actions/mcu';\nimport { fetchMiner } from '../../actions/miner';\n\nclass Dashboard extends Component {\n\n  componentDidMount() {\n    this.props.fetchMcu();\n    this.props.fetchMiner();\n  }\n\n  render() {\n    const { loadingMcu, mcu, loadingMiner, miner, settings } = this.props;\n\n    if (loadingMiner) {\n      return <div>Loading...</div>;\n    }\n\n    // Miner shares\n    const minerTotalShares = (miner.stats.summary.data.hardwareErrors + miner.stats.summary.data.accepted + miner.stats.summary.data.rejected);\n    const minerpercentageRejected = miner.stats.summary.data.rejected * minerTotalShares / 100\n    const minerpercentageError = miner.stats.summary.data.hardwareErrors * minerTotalShares / 100\n    let errorsColor = 'success';\n    if (minerpercentageError >= 10 && minerpercentageError <= 20) errorsColor = 'warning';\n    else if (minerpercentageError > 20) errorsColor = 'danger';\n\n    // Miner uptime\n    const minerUptime = moment().to(moment().subtract(miner.stats.summary.data.elapsed, 'seconds'), true);\n\n    // Active pool\n    const mainPool = _.find(miner.stats.pools.data, { stratumActive: true });\n\n    // Last share\n    let lastShare = 0,\n        lastShareTime = 0,\n        lastShareColor = 'success';\n    const timestamp = moment().format('X');\n    if (mainPool && mainPool.lastShareTime) {\n      lastShare = moment().to(moment(mainPool.lastShareTime, 'X'));\n      lastShareTime = mainPool.lastShareTime;\n    }\n    const diffLastShare = timestamp - lastShareTime;\n    if (diffLastShare >= 300 && diffLastShare <= 600) lastShareColor = 'warning';\n    else if (diffLastShare > 600) lastShareColor = 'danger'\n\n    return (\n      <div ref=\"main\">\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-dark\" \n                icon=\"fa fa-fire\" \n                value={DisplayHashrate(miner.stats.summary.data.mHSAv, 'mh')}\n                title=\"Current hashrate\"\n                progressColor=\"primary\"\n                progressValue=\"100\"\n                secondaryTitle=\"Pool\"\n                secondaryValue={(mainPool && mainPool.url) ? mainPool.url : 'Nothing active'}\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-info\" \n                icon=\"fa fa-thermometer-half\" \n                value={miner.stats.summary.data.temperature || 0 + ' C°'}\n                title=\"Miner temperature\"\n                progressColor=\"success\"\n                progressValue={miner.stats.summary.data.temperature}\n                secondaryTitle=\"MCU temperature\"\n                secondaryValue={(mcu.temperature / 1000).toFixed(2) + ' C°'}\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-gray-300\" \n                icon=\"fa fa-exclamation-triangle\" \n                value={minerpercentageError + '%'}\n                title=\"Hardware errors\"\n                progressColor={errorsColor}\n                progressValue={100 - minerpercentageError}\n                secondaryTitle=\"Rejected\"\n                secondaryValue={minerpercentageRejected + '%'}\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-gray-200\" \n                icon=\"fa fa-clock\" \n                value={minerUptime}\n                title=\"Miner uptime\"\n                progressColor={lastShareColor}\n                progressValue={100}\n                secondaryTitle=\"Last share\"\n                secondaryValue={lastShare}\n              ></DashboardWidget>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-hdd text-gray\"></i></div>\n                  <div className=\"h4 m-0\">{settings.minerMode || 'Not set'}</div>\n                  <div><Trans>Miner mode</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-bolt text-gray\"></i></div>\n                  <div className=\"h4 m-0\">{settings.voltage || 0}V</div>\n                  <div><Trans>Miner voltage</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-broadcast-tower text-gray\"></i></div>\n                  <div className=\"h4 m-0\">{settings.frequency || 0}MHz</div>\n                  <div><Trans>Miner frequency</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-wind text-gray\"></i></div>\n                  <div className=\"h4 m-0\">{(settings.fan > -1) ? settings.fan + '%' : 'Auto'}</div>\n                  <div><Trans>Fan speed</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <h4><Trans>Pools</Trans></h4>\n              <div>\n                <Table  responsive className=\"table-outline d-none d-sm-table\">\n                  <thead className=\"bg-light\">\n                  <tr>\n                    <th className=\"text-center\"><i className=\"fa fa-tasks\"></i></th>\n                    <th><Trans>Url</Trans></th>\n                    <th><Trans>Type</Trans></th>\n                    <th><Trans>Status</Trans></th>\n                    <th><Trans>Hashrate</Trans></th>\n                    <th>CS</th>\n                    <th>CA</th>\n                    <th>PS</th>\n                    <th>PA</th>\n                    <th>CR</th>\n                    <th>PR</th>\n                    <th><Trans>Username</Trans></th>\n                  </tr>\n                  </thead>\n                  <tbody className=\"bg-white\">\n                  <tr>\n                    <td className=\"text-center\">\n                      <Button><Trans>Select</Trans></Button>\n                    </td>\n                    <td>\n                      <div className=\"font-weight-bold text-muted\">stratum+tcp://us.litecoinpool.org:3333</div>\n                    </td>\n                    <td className=\"text-center\">\n                      <h5 className=\"mb-0\"><Badge color=\"primary\">Main</Badge></h5>\n                    </td>\n                    <td>\n                      <h5 className=\"mb-0\"><Badge color=\"success\">Alive</Badge></h5>\n                    </td>\n                    <td className=\"text-center\">\n                      <h6 className=\"mb-0 font-weight-bold\">140.56 MH/s</h6>\n                    </td>\n                    <td>123</td>\n                    <td>0</td>\n                    <td>45</td>\n                    <td>0</td>\n                    <td>67</td>\n                    <td>9</td>\n                    <td>futurebit.1</td>\n                  </tr>\n                  <tr>\n                    <td className=\"text-center\">\n                      <Button><Trans>Select</Trans></Button>\n                    </td>\n                    <td>\n                      <div className=\"font-weight-bold text-muted\">stratum+tcp://eu.multipool.us:3123</div>\n                    </td>\n                    <td className=\"text-center\">\n                      <h5 className=\"mb-0\"><Badge color=\"light\">Failover</Badge></h5>\n                    </td>\n                    <td>\n                      <h5 className=\"mb-0\"><Badge color=\"success\">Alive</Badge></h5>\n                    </td>\n                    <td className=\"text-center\">\n                      <h6 className=\"mb-0\">0 MH/s</h6>\n                    </td>\n                    <td>123</td>\n                    <td>0</td>\n                    <td>45</td>\n                    <td>0</td>\n                    <td>67</td>\n                    <td>9</td>\n                    <td>futurebit.1</td>\n                  </tr>\n                  </tbody>\n                </Table>\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loadingMcu: state.mcuStats.loading,\n    mcu: state.mcuStats.data,\n    loadingMiner: state.minerStats.loading,\n    miner: state.minerStats.data,\n    settings: state.settings\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMcu: () => {\n      dispatch(fetchMcu())\n    },\n    fetchMiner: () => {\n      dispatch(fetchMiner())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import Dashboard from './Dashboard'\n\nexport default Dashboard"],"sourceRoot":""}