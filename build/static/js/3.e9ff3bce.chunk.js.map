{"version":3,"sources":["views/Settings/SettingsMiner/SettingsMiner.js","views/Settings/SettingsWifi/SettingsWifi.js","views/Modals/ModalsRestore.js","views/Settings/SettingsGeneral/SettingsGeneral.js","views/Settings/Settings.js","views/Settings/index.js"],"names":["SettingsMiner","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","marks","frequency","min","max","step","data","299","439","579","719","858","voltage","644","710.75","777.5","845.25","911","fan","0","25","50","75","100","state","autoFan","onSelect","bind","assertThisInitialized","autoFanSwitchChange","mode","onChange","name","value","_this$props","setState","_this2","_this$props2","minerMode","customApproval","node_modules_react_default","a","createElement","react","_ref","i18n","className","reactstrap_es","xl","id","form","lg","react_es","variant","label","color","checked","size","disabled","components","href","rc_slider_es","val","Component","SettingsWifi","handleScan","wifiScanMcu","handleClick","ssid","connected","handleConnect","event","wifiConnectMcu","passphrase","wifiPassword","preventDefault","handleDisconnect","wifiDisconnectMcu","evt","defineProperty","target","loadingWifiScan","loadingWifiConnect","loadingWifiDisconnect","wifiError","wifis","address","mcu","_this$state","md","stats","activeWifi","pill","onClick","onSubmit","for","values","type","bsSize","Loading","length","map","wifi","index","key","percentColor","signal","connect","mcuWifiScan","loading","mcuWifiConnect","error","mcuWifiDisconnect","mcuStats","dispatch","_ref2","ModalsRestore","content","backupError","handleRestore","handleClose","handleFileChosen","toggleRestoreModal","restoreConfiguration","backup","JSON","parse","err","settings","pools","file","reader","FileReader","onload","result","readAsText","_this3","show","isOpen","e","files","status","toggleRestoreModalAction","restoreConfigurationAction","SettingsGeneral","password","repeatPassword","passwordError","repeatPasswordError","handlePasswordChange","handleBackupConfiguration","handletoggleRestoreModal","changePassword","backupConfiguration","leftSidebarVisibility","leftSidebarExtended","rightSidebarVisibility","temperatureUnit","_this$state2","placeholder","flush","dataOn","dataOff","Modals_ModalsRestore","changePasswordAction","backupConfigurationAction","restartFields","Settings","objectSpread","handleSave","handleSaveAndRestart","save","saveAndRestart","_this$state$settings","oldSettings","changed","isEqual","restartNeeded","pick","Settings_SettingsMiner_SettingsMiner","assign","Settings_SettingsWifi_SettingsWifi","Settings_SettingsGeneral_SettingsGeneral","saveSettings","saveSettingsAndRestartMiner"],"mappings":"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","file":"static/js/3.e9ff3bce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AppSwitch } from '@coreui/react';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  CardSubtitle,\n  Col,\n  Row,\n  Form,\n} from 'reactstrap';\n\nimport 'rc-slider/assets/index.css';\nimport Slider from 'rc-slider';\n\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nclass SettingsMiner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.marks = {\n      frequency: {\n        min: 299,\n        max: 858,\n        step: 13,\n        data: {\n          299: 'Min',\n          439: '439MHz',\n          579: '579MHz',\n          719: '719MHz',\n          858: 'Max'\n        }\n      },\n      voltage: {\n        min: 644,\n        max: 911,\n        step: 4.15,\n        data: {\n          644: 'Min',\n          710.75: '710.75V',\n          777.5: '777.5V',\n          845.25: '845.25V',\n          911: 'Max'\n        }\n      },\n      fan: {\n        min: 0,\n        max: 100,\n        data: {\n          0: 'Min',\n          25: '25%',\n          50: '50%',\n          75: '75%',\n          100: 'Max'\n        }\n      }\n    };\n\n    this.state = {\n      autoFan: props.fan === 0 ? true : false\n    };\n\n    this.onSelect = this.onSelect.bind(this);\n    this.autoFanSwitchChange = this.autoFanSwitchChange.bind(this);\n  }\n\n  onSelect(mode) {\n    const {\n      onChange,\n    } = this.props;\n    onChange({ name: 'minerMode', value: mode });\n  }\n\n  autoFanSwitchChange() {\n    const {\n      fan,\n      onChange,\n    } = this.props;\n\n    this.setState({\n      autoFan: !this.state.autoFan\n    });\n\n    onChange({ name: 'fan', value: (this.state.autoFan) ? 50 : 0 });\n  }\n\n  render() {\n    const {\n      minerMode,\n      voltage,\n      fan,\n      customApproval,\n      frequency,\n      onChange,\n    } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div className=\"animated fadeIn\">\n            <Row>\n              { /* Miner */ }\n              <Col xl=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle><i className=\"fa fa-hdd mr-2\"></i><Trans>Miner</Trans></CardTitle>\n                    <CardSubtitle className=\"text-muted\"><Trans>Manage miner specific configurations</Trans></CardSubtitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Form>\n                      <Row form>\n                        <Col lg={12} xl={4}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={minerMode === 'eco'}\n                                size=\"\"\n                                onChange={() => this.onSelect('eco')}\n                                disabled={minerMode === 'eco'}\n                              />\n                              <h4>\n                                <i className=\"fa fa-leaf mr-2 initialism text-secondary\" />\n                                <Trans>ECO</Trans>\n                              </h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                { \n                                // eslint-disable-next-line \n                                }\n                                <Trans>In ECO mode your miner will consume less power (about <b>1.0W/MHs</b>) but its hashrate will be slower.</Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                        <Col lg={12} xl={4}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"primary\"\n                                checked={minerMode === 'balanced'}\n                                size=\"\"\n                                onChange={() => this.onSelect('balanced')}\n                                disabled={minerMode === 'balanced'}\n                              />\n                              <h4>\n                                <i className=\"fa fa-balance-scale mr-2 initialism text-secondary\" />\n                                <Trans>BALANCED</Trans>\n                              </h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                { \n                                // eslint-disable-next-line \n                                }\n                                <Trans>In BALANCED mode your miner will consume a bit more power (about <b>1.2W/MHs</b>) and its hashrate will be a bit faster.</Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                        <Col lg={12} xl={4}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"warning\"\n                                checked={minerMode === 'turbo'}\n                                size=\"\"\n                                onChange={() => this.onSelect('turbo')}\n                                disabled={minerMode === 'turbo'}\n                              />\n                              <h4>\n                                <i className=\"fa fa-rocket mr-2 initialism text-secondary\" />\n                                <Trans>TURBO</Trans>\n                              </h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                { \n                                // eslint-disable-next-line \n                                }\n                                <Trans>In Turbo mode your miner will consume more power (about <b>1.4W/MHs</b>) and so its hashrate will be faster.</Trans>\n                              </p>\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n            \n            <Row>\n              <Col xl=\"12\">\n                <Card>\n                  <CardHeader>\n                    <AppSwitch\n                      className=\"float-left mr-2\"\n                      variant=\"pill\"\n                      label\n                      color=\"danger\"\n                      checked={minerMode === 'custom'}\n                      size=\"\"\n                      onChange={() => this.onSelect('custom')}\n                      disabled={minerMode === 'custom'}\n                    />\n                    <CardTitle><i className=\"fa fa-diagnoses mr-2\"></i><Trans>Miner custom mode</Trans></CardTitle>\n                    <CardSubtitle className=\"text-muted\"><Trans>DANGER zone!</Trans></CardSubtitle>\n                  </CardHeader>\n                  <CardBody>\n                    <div className=\"lead\">\n                      <p className=\"text-muted \">\n                        <Trans>The Apollo comes with tuned preset values (look above) which offer a good range of operating modes, by selecting custom you risk damaging your device and FutureBit will not be responsible for any or all damage caused by over-clocking or over-volting</Trans>\n                      </p>\n                    </div>\n                    {\n                    minerMode === 'custom'\n                    && (\n                    <Form>\n                      <Row form>\n                        <Col lg={12} xl={6}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <h4><Trans>Voltage</Trans> <b>{voltage}<span className=\"small\">V</span></b></h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                { \n                                // eslint-disable-next-line \n                                }\n                                <Trans>You can set your miner custom voltage or <a href=\"\">reset</a> to default value.</Trans>\n                              </p>\n                              <Card className=\"border-0\">\n                                <CardBody>\n                                  <Slider\n                                    min={this.marks.voltage.min}\n                                    max={this.marks.voltage.max}\n                                    marks={this.marks.voltage.data}\n                                    step={this.marks.voltage.step}\n                                    value={voltage}\n                                    onChange={val => onChange({ value: val, name: 'voltage' })}\n                                  />\n                                </CardBody>\n                              </Card>\n                            </div>\n                          </div>\n                        </Col>\n                        <Col lg={12} xl={6}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <h4><Trans>Frequency</Trans> <b>{frequency}<span className=\"small\">MHz</span></b></h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                { \n                                // eslint-disable-next-line \n                                }\n                                <Trans>You can set your miner custom frequency or <a href=\"\">reset</a> to default value.</Trans>\n                              </p>\n                              <Card className=\"border-0\">\n                                <CardBody>\n                                  <Slider\n                                    min={this.marks.frequency.min}\n                                    max={this.marks.frequency.max}\n                                    marks={this.marks.frequency.data}\n                                    step={this.marks.frequency.step}\n                                    value={frequency}\n                                    onChange={val => onChange({ value: val, name: 'frequency' })}\n                                  />\n                                </CardBody>\n                              </Card>\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                    </Form>\n                    )\n                  }\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col xl=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle><i className=\"fa fa-wind mr-2\"></i><Trans>Miner fan speed</Trans></CardTitle>\n                    <CardSubtitle className=\"text-muted\"><Trans>Adjust the fan speed or set it automatic</Trans></CardSubtitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Form>\n                      <Row form>\n                        <Col lg={12} xl={6}>\n                          <div>\n                            <div className=\"clearfix\">\n                              <h4>Fan { (fan) ? <span>at <b>{fan}<span className=\"small\">%</span></b></span> : <Badge size=\"sm\" color=\"success\">Auto</Badge> }</h4>\n                            </div>\n                            <div>\n                              <p className=\"text-muted \">\n                                <Trans>Put the slider to the minimum to set automatic fan speed, or choose yours.</Trans>\n                              </p>\n                              <Card className=\"border-0\">\n                                <CardBody>\n                                  <Slider\n                                    min={this.marks.fan.min}\n                                    max={this.marks.fan.max}\n                                    step={5}\n                                    marks={this.marks.fan.data}\n                                    value={fan}\n                                    onChange={val => onChange({ value: val, name: 'fan' })}\n                                  />\n                                </CardBody>\n                              </Card>\n                            </div>\n                          </div>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n\nexport default SettingsMiner;\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Button,\n  Badge,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  CardSubtitle,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  ListGroup,\n  ListGroupItem,\n  Progress\n} from 'reactstrap';\n\nimport { wifiScanMcu, wifiConnectMcu, wifiDisconnectMcu } from '../../../actions/mcu';\nimport { percentColor } from '../../Filters';\n\nimport { Loading } from '../../Loading';\nimport { Trans } from '@lingui/macro';\nimport { I18n } from \"@lingui/react\"\n\nclass SettingsWifi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ssid: null,\n      wifiPassword: '',\n      connected: null\n    };\n  }\n\n  handleScan = () => {\n    const { wifiScanMcu } = this.props;\n\n    wifiScanMcu();\n  }\n\n  handleClick = (ssid) => {\n    this.setState({\n      ssid: ssid,\n      connected: null\n    });\n  }\n\n  handleConnect = (event) => {\n    const { wifiConnectMcu } = this.props;\n    this.setState({ connected: true });\n\n    wifiConnectMcu({ ssid: this.state.ssid, passphrase: this.state.wifiPassword });\n\n    event.preventDefault();\n  }\n\n  handleDisconnect = () => {\n    const { wifiDisconnectMcu } = this.props;\n    this.setState({\n      ssid: null,\n      connected: false\n    });\n\n    wifiDisconnectMcu();\n  }\n\n  onChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  render() {\n    const { loadingWifiScan, loadingWifiConnect, loadingWifiDisconnect, wifiError, wifis, address, mcu } = this.props\n\n    const { wifiPassword, ssid, connected } = this.state\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div className=\"animated fadeIn\">\n            <Row>\n              <Col lg=\"12\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>\n                      <i className=\"fa fa-wifi mr-2\"></i><Trans>Wifi</Trans>\n                    </CardTitle>\n                    <CardSubtitle className=\"text-muted\"><Trans>Connect your system controller to a Wifi instead using ethernet</Trans></CardSubtitle>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col md={6}>\n                        <div>\n                          <div className=\"clearfix\">\n                            <h4>\n                              { (mcu.stats.activeWifi) && ( <div className=\"d-inline mr-2\"><small className=\"text-muted\">Active wifi</small> <Badge color=\"success\" pill>{ mcu.stats.activeWifi }</Badge></div>) }\n                              <div className={ mcu.stats.activeWifi ? 'd-inline' : 'd-inline-block'}>\n                                <Button \n                                  className=\"float-left mr-2 text-uppercase\" \n                                  color={'warning'} \n                                  size=\"sm\"\n                                  disabled={ loadingWifiDisconnect }\n                                  onClick={ this.handleDisconnect }\n                                ><Trans>Disconnect</Trans></Button>\n                                <Button \n                                  className=\"float-left mr-2 text-uppercase\" \n                                  color={'primary'} \n                                  size=\"sm\"\n                                  disabled={ loadingWifiDisconnect }\n                                  onClick={ this.handleScan }\n                                ><Trans>Scan</Trans></Button>\n                              </div>\n                            </h4>\n                            <div className=\"mt-1\">\n                              <p className=\"text-muted \">\n                                <Trans>Clicking the button your system will scan for available wifi networks. Clicking one of the available ssid will require to input the passphrase. Clicking the disconnect button will delete every wifi connections, if you are in trouble try to click disconnect before trying anything else.</Trans>\n                              </p>\n                            </div>\n                            { (ssid && !connected) ?\n                              <Form onSubmit={this.handleConnect} className=\"mt-4\">\n                                <Row form>\n                                  <Col md={12}>\n                                    <FormGroup>\n                                      <Label for=\"wifiPassword\"><Trans>Wifi <b>{ ssid }</b> Password</Trans></Label>\n                                      <Input\n                                        type=\"password\"\n                                        name=\"wifiPassword\"\n                                        id=\"wifiPassword\"\n                                        value={ wifiPassword }\n                                        onChange={ this.onChange }\n                                        bsSize=\"lg\"\n                                      />\n                                    </FormGroup>\n                                  </Col>\n                                  <Col md={12}>\n                                    <Button className=\"mr-2 text-uppercase\" color=\"primary\" size=\"sm\" onClick={ this.handleConnect }><Trans>Connect</Trans></Button>\n                                  </Col>\n                                </Row>\n                              </Form>\n                              : null\n                            }\n                            { connected && (\n                              <div className=\"text-muted lead\">\n                                { (loadingWifiConnect) ?\n                                  <Loading />\n                                  :\n                                  (wifiError) ?\n                                    <Alert color=\"warning\">There was a problem connecting to the wifi, please doucle check the password. <b>{ wifiError }</b></Alert>\n                                    : <Alert color=\"success\">Your controller should be connected to <b>{ ssid }</b> Wifi now. Try to go to <a href={'http://' + address} className=\"font-weight-bold\">{ address }</a> before disconnecting the ethernet cable.</Alert>\n                                }\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md={6}>\n                        <div>\n                          <div className=\"clearfix\">\n                            <h4><i className=\"fa fa-wifi mr-2 initialism text-secondary\"></i><Trans>Wifi networks</Trans></h4>\n                          </div>\n                        { (loadingWifiScan || loadingWifiDisconnect) ?\n                          <Loading />\n                          : \n                            (!wifis || !wifis.length) ?\n                              <div className=\"\">\n                                <p className=\"text-muted \">\n                                  <Trans>There are no wifi networks available yet. Please click the scan button to look at them.</Trans>\n                                </p>\n                              </div>\n                            :\n                              <ListGroup>\n                                { wifis.map((wifi, index) => {\n                                  return <ListGroupItem key={ index } className=\"border-0\">\n                                    <Button color=\"link\" className=\"p-0\" onClick={() => { this.handleClick(wifi.ssid) } }>{ wifi.ssid }</Button>\n                                    <Progress className=\"progress-xs\" color={ percentColor(wifi.signal, 'inverse') } value={ wifi.signal } />\n                                    <small className=\"text-muted\">Signal <b>{ wifi.signal }%</b></small>\n                                  </ListGroupItem>\n                                })}\n                              </ListGroup>\n                        }\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    wifis: state.mcuWifiScan.data,\n    loadingWifiScan: state.mcuWifiScan.loading,\n    address: state.mcuWifiConnect.data,\n    wifiError: state.mcuWifiConnect.error,\n    loadingWifiConnect: state.mcuWifiConnect.loading,\n    loadingWifiDisconnect: state.mcuWifiDisconnect.loading,\n    mcu: state.mcuStats.data\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    wifiScanMcu: () => {\n      dispatch(wifiScanMcu())\n    },\n    wifiConnectMcu: ({ ssid, passphrase }) => {\n      dispatch(wifiConnectMcu({ ssid, passphrase }))\n    },\n    wifiDisconnectMcu: () => {\n      dispatch(wifiDisconnectMcu())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsWifi);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Row,\n  Input,\n  FormGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nimport { Loading } from '../Loading';\nimport { Trans } from '@lingui/macro';\n\nimport { toggleRestoreModal as toggleRestoreModalAction } from '../../actions/backup';\nimport { restoreConfiguration as restoreConfigurationAction } from '../../actions/backup';\n\nclass ModalsRestore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: '',\n      backupError: '',\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleRestore = this.handleRestore.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleFileChosen = this.handleFileChosen.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  handleRestore() {\n    const {\n      content,\n      backupError,\n    } = this.state;\n\n    const {\n      toggleRestoreModal,\n      restoreConfiguration,\n    } = this.props;\n\n    if (!content) {\n      this.setState({\n        backupError: 'Backup file is required.',\n      });\n      return;\n    }\n\n    let backup = '';\n\n    try {\n      backup = JSON.parse(content);\n    } catch (err) {\n      this.setState({\n        backupError: 'Invalid backup file',\n      });\n      return;\n    }\n\n    if (!backup.settings || !backup.pools) {\n      this.setState({\n        backupError: 'Invalid backup file',\n      });\n      return;\n    }\n\n    restoreConfiguration(backup);\n    toggleRestoreModal(false);\n  }\n\n  handleClose() {\n    const {\n      toggleRestoreModal,\n    } = this.props;\n\n    // TODO: Add restore\n\n    toggleRestoreModal(false);\n  }\n\n  handleFileChosen(file) {\n    const {\n      content,\n    } = this.state;\n\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      this.setState({\n        content: evt.target.result,\n      });\n    };\n    reader.readAsText(file);\n  }\n\n  render() {\n    const {\n      show,\n      className,\n    } = this.props;\n\n    const {\n      backupError,\n    } = this.state;\n\n    return (\n      <div>\n        <Modal isOpen={show} className={className} size=\"md\">\n          <ModalHeader className=\"bg-light\">Restore backup configuration</ModalHeader>\n          <ModalBody>\n            <div className=\"animated fadeIn\">\n              <Row>\n                <Col lg=\"12\">\n                  <Card className=\"border-0\">\n                    <CardBody>\n                      <FormGroup className=\"mb-0\">\n                        <Input\n                          type=\"file\"\n                          name=\"backup\"\n                          id=\"backup\"\n                          bsSize=\"lg\"\n                          onChange={e => this.handleFileChosen(e.target.files[0])}\n                        />\n                        <span className=\"text-danger\">\n                          {backupError}\n                        </span>\n                      </FormGroup>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={this.handleClose}>Close</Button>\n            <Button color=\"primary\" onClick={this.handleRestore}>Restore</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  show: state.backup.status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleRestoreModal: (status) => {\n    dispatch(toggleRestoreModalAction({ status }));\n  },\n  restoreConfiguration: (backup) => {\n    dispatch(restoreConfigurationAction({ backup }));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalsRestore);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport { AppSwitch } from '@coreui/react';\nimport {\n  Button,\n  CardDeck,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  CardSubtitle,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport ModalsRestore from '../../Modals/ModalsRestore';\n\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nimport { changePassword as changePasswordAction } from '../../../actions/auth';\nimport { backupConfiguration as backupConfigurationAction } from '../../../actions/backup';\nimport { toggleRestoreModal as toggleRestoreModalAction } from '../../../actions/backup';\n\nclass SettingsGeneral extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: '',\n      repeatPassword: '',\n      passwordError: '',\n      repeatPasswordError: '',\n    };\n\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleBackupConfiguration = this.handleBackupConfiguration.bind(this);\n    this.handletoggleRestoreModal = this.handletoggleRestoreModal.bind(this);\n  }\n\n  onChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  }\n\n  handlePasswordChange() {\n    const {\n      password,\n      repeatPassword,\n    } = this.state;\n\n    const {\n      changePassword,\n    } = this.props;\n\n    if (!password) {\n      this.setState({\n        passwordError: 'Password is required.',\n      });\n      return;\n    }\n\n    if (password !== repeatPassword) {\n      this.setState({\n        passwordError: 'Passwords do not match.',\n        repeatPasswordError: 'Passwords do not match.',\n      });\n      return;\n    }\n\n    changePassword(password);\n  }\n\n  handleBackupConfiguration() {\n    const {\n      backupConfiguration,\n    } = this.props;\n\n    backupConfiguration();\n  }\n\n  handletoggleRestoreModal() {\n    const {\n      toggleRestoreModal,\n    } = this.props;\n\n    toggleRestoreModal(true);\n  }\n\n  render() {\n    const {\n      leftSidebarVisibility,\n      leftSidebarExtended,\n      rightSidebarVisibility,\n      temperatureUnit,\n      onChange,\n    } = this.props;\n\n    const {\n      password,\n      repeatPassword,\n      passwordError,\n      repeatPasswordError,\n    } = this.state;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div className=\"animated fadeIn\">\n            <CardDeck>\n              { /* Lockscreen */ }\n              <Card>\n                <CardHeader>\n                  <CardTitle><i className=\"fa fa-key mr-2\"></i><Trans>Change lockscreen password</Trans></CardTitle>\n                  <CardSubtitle className=\"text-muted\"><Trans>Change the password to access the dashboard</Trans></CardSubtitle>\n                </CardHeader>\n                <CardBody>\n                  <p className=\"help-block form-text text-muted\">\n                    <Trans>Changing the password will lock the dashboard. You will need to use the new password to unlock it.</Trans>\n                  </p>\n                  <Form>\n                    <Row form>\n                      <Col md={6}>\n                        <FormGroup>\n                          <Label for=\"password\"><Trans>Password</Trans></Label>\n                          <Input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            bsSize=\"lg\"\n                            value={password}\n                            onChange={this.onChange}\n                          />\n                          <span className=\"text-danger\">\n                            {passwordError}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                      <Col md={6}>\n                        <FormGroup>\n                          <Label for=\"repeatPassword\"><Trans>Repeat password</Trans></Label>\n                          <Input\n                            type=\"password\"\n                            name=\"repeatPassword\"\n                            id=\"repeatPassword\"\n                            placeholder=\"\"\n                            bsSize=\"lg\"\n                            value={repeatPassword}\n                            onChange={this.onChange}\n                          />\n                          <span className=\"text-danger\">\n                            {repeatPasswordError}\n                          </span>\n                        </FormGroup>\n                      </Col>\n                      <Col md={12}>\n                        <Button className=\"mr-2 text-uppercase\" color=\"primary\" size=\"sm\" onClick={this.handlePasswordChange}><Trans>Change</Trans></Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n\n              { /* Layout */ }\n              <Card>\n                <CardHeader>\n                  <CardTitle><i className=\"fa fa-sliders-h mr-2\"></i><Trans>Layout options</Trans></CardTitle>\n                  <CardSubtitle className=\"text-muted\"><Trans>Manage dashboard specific configurations</Trans></CardSubtitle>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col lg={12} xl={6}>\n                        <ListGroup flush>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={leftSidebarVisibility}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'leftSidebarVisibility', value: !leftSidebarVisibility })}\n                              />\n                              <div><Trans>Left Sidebar visibility</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Set left sidebar default visibility</Trans></div>\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={leftSidebarExtended}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'leftSidebarExtended', value: !leftSidebarExtended })}\n                              />\n                              <div><Trans>Extended sidebar</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Keep left sidebar extended or only icons</Trans></div>\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                dataOn=\"°C\"\n                                dataOff=\"°F\"\n                                label\n                                color=\"success\"\n                                checked={temperatureUnit === 'c'}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'temperatureUnit', value: temperatureUnit === 'f' ? 'c' : 'f' })}\n                              />\n                              <div><Trans>Temperature unit</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Set it to Celsius or Fahrenheit</Trans></div>\n                          </ListGroupItem>\n                        </ListGroup>\n                      </Col>\n                      <Col lg={12} xl={6}>\n                        <ListGroup flush>\n                          <ListGroupItem>\n                            <div className=\"clearfix\">\n                              <AppSwitch\n                                className=\"float-left mr-2\"\n                                variant=\"pill\"\n                                label\n                                color=\"success\"\n                                checked={rightSidebarVisibility}\n                                size=\"\"\n                                onChange={() => onChange({ name: 'rightSidebarVisibility', value: !rightSidebarVisibility })}\n                              />\n                              <div><Trans>Right sidebar visibility</Trans></div>\n                            </div>\n                            <div className=\"mt-1 small text-muted\"><Trans>Set right sidebar default visibility</Trans></div>\n                          </ListGroupItem>\n                        </ListGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n\n              { /* Backup/Reset */ }\n              <Card>\n                <CardHeader>\n                  <CardTitle><i className=\"fa fa-save mr-2\"></i><Trans>Backup &amp; Reset</Trans></CardTitle>\n                  <CardSubtitle className=\"text-muted\"><Trans>Use this tools to backup, restore and reset configurations</Trans></CardSubtitle>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row form>\n                      <Col md={12}>\n                        <ListGroup flush>\n                          <ListGroupItem>\n                            <div className=\"\">\n                              <Button className=\"mr-2 text-uppercase\" color=\"primary\" size=\"sm\" onClick={this.handleBackupConfiguration}><Trans>Backup</Trans></Button>\n                              <div className=\"mt-1 small text-muted\"><Trans>Create a backup file of dashboard, miner and pools configurations</Trans></div>\n                            </div>\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            <div className=\"\">\n                              <Button className=\"mr-2 text-uppercase\" color=\"primary\" size=\"sm\" onClick={this.handletoggleRestoreModal}><Trans>Restore</Trans></Button>\n                              <div className=\"mt-1 small text-muted\"><Trans>Restore all configurations from a backup file</Trans></div>\n                            </div>\n                          </ListGroupItem>\n                        </ListGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </CardDeck>\n\n            <ModalsRestore />\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  changePassword: (password) => {\n    dispatch(changePasswordAction({ password }));\n  },\n  backupConfiguration: () => {\n    dispatch(backupConfigurationAction());\n  },\n  toggleRestoreModal: (status) => {\n    dispatch(toggleRestoreModalAction({ status }));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(SettingsGeneral);\n","import { connect } from 'react-redux';\nimport React, { Component } from 'react';\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Col,\n  Row,\n} from 'reactstrap';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\n\nimport { Trans } from '@lingui/macro';\n\nimport SettingsMiner from './SettingsMiner/SettingsMiner';\nimport SettingsWifi from './SettingsWifi/SettingsWifi';\nimport SettingsGeneral from './SettingsGeneral/SettingsGeneral';\nimport { saveSettings, saveSettingsAndRestartMiner } from '../../actions/settings';\n\nconst restartFields = [\n  'minerMode',\n  'frequency'\n];\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      settings,\n    } = this.props;\n\n    this.state = {\n      settings: { ...settings },\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleSaveAndRestart = this.handleSaveAndRestart.bind(this);\n  }\n\n  onChange({ name, value }) {\n    this.setState(state => ({\n      settings: {\n        ...state.settings,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleSave() {\n    const { save } = this.props;\n    const { settings } = this.state;\n\n    save(settings);\n  }\n\n  handleSaveAndRestart() {\n    const { saveAndRestart } = this.props;\n    const { settings } = this.state;\n\n    saveAndRestart(settings);\n  }\n\n  render() {\n    const {\n      settings: {\n        minerMode,\n        voltage,\n        frequency,\n        fan,\n        customApproval,\n        leftSidebarVisibility,\n        leftSidebarExtended,\n        rightSidebarVisibility,\n        temperatureUnit,\n      },\n      settings,\n    } = this.state;\n\n    const { oldSettings } = this.props;\n\n    const changed = !isEqual(settings, oldSettings);\n    const restartNeeded = !isEqual(pick(settings, restartFields), pick(oldSettings, restartFields));\n    return (\n      <div className=\"animated fadeIn\">\n        { changed && (\n        <Row>\n          <Col lg=\"12\">\n            <Card>\n              <CardHeader className=\"bg-dark\">\n                { !restartNeeded && (\n                  <Button\n                    size=\"sm\"\n                    className=\"btn-success text-uppercase mr-2\"\n                    disabled={!changed}\n                    onClick={this.handleSave}\n                  >\n                    <Trans>Save</Trans>\n                  </Button>\n                )}\n                { restartNeeded && (\n                  <Button\n                    size=\"sm\"\n                    className=\"btn-warning text-uppercase\"\n                    onClick={this.handleSaveAndRestart}\n                  >\n                    <Trans>Save &amp; Restart</Trans>\n                  </Button>\n                )}\n                { restartNeeded && <span className=\"ml-2\"><Trans>You need to restart your miner to apply changes.</Trans></span> }\n                { !restartNeeded && changed && <span className=\"ml-2\"><Trans>You need to save your settings to apply changes (miner won't be restarted).</Trans></span> }\n              </CardHeader>\n            </Card>\n          </Col>\n        </Row>\n        )}\n\n        { /* Miner conf */ }\n        <SettingsMiner\n          {...{\n            minerMode, voltage, frequency, fan, customApproval\n          }}\n          onChange={this.onChange}\n        />\n\n        { /* Wifi */ }\n\n        <SettingsWifi />\n\n        { /* General options */ }\n        <SettingsGeneral\n          {...{\n            leftSidebarVisibility, leftSidebarExtended, rightSidebarVisibility, temperatureUnit,\n          }}\n          onChange={this.onChange}\n        />\n\n        <p />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.settings,\n  oldSettings: state.settings,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  save: (settings) => {\n    dispatch(saveSettings(settings));\n  },\n  saveAndRestart: (settings) => {\n    dispatch(saveSettingsAndRestartMiner(settings));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import Settings from './Settings'\n\nexport default Settings"],"sourceRoot":""}